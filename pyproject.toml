[tool.poetry]

name = "perscache"
version = "0.6.1"
description = "Dead simple persistent memoization"
license = "MIT"
authors = [
    "Alexey Leshchenko <leshchenko1979@gmail.com>",
]
readme = "README.md"
homepage = "https://github.com/leshchenko1979/perscache"
repository = "https://github.com/leshchenko1979/perscache"
documentation = "https://github.com/leshchenko1979/perscache"
packages = [
    { include = "perscache" },
]
classifiers = [
     "Development Status :: 4 - Beta",
     "Intended Audience :: Developers",
     "License :: OSI Approved :: Apache Software License",
     "Natural Language :: English",
     "Operating System :: OS Independent",
     "Programming Language :: Python",
     "Programming Language :: Python :: 3.6",
     "Programming Language :: Python :: 3.7",
     "Programming Language :: Python :: 3.8",
     "Programming Language :: Python :: 3.9",
     "Programming Language :: Python :: 3.10",
     "Programming Language :: Python :: 3.11",
     "Programming Language :: Python :: Implementation :: CPython",
     "Topic :: Software Development",
]

[tool.poetry.dependencies]
# Supported Python versions
python = ">=3.8.1,<3.12"

# Core project dependencies
beartype = ">=0.10.0"
boltons = ">=23.0"
cloudpickle = "*"
icontract = "*"

# Optional Extras
gcsfs = { version = "^2023.6", optional = true }
pandas = { version = "^2.0", optional = true }
pyarrow = { version = "^12.0", optional = true }
pyyaml = { version = "^6.0", optional = true }


[tool.poetry.extras]
full = ["gcsfs", "pandas", "pyarrow", "pyyaml"]
csv = ["pandas"]
gcloud = ["gcsfs"]
parquet = ["pyarrow"]
yaml = ["pyyaml"]


[tool.poetry.group.dev.dependencies]
# Formatting & Linting
black = "^23.3"
codespell = "^2.2"
flake8 = "^6.0"
flake8-bugbear = "^23.6"
flake8-docstrings = "^1.7"
isort = { version = "^5.12", extras = [ "colors" ] }
mypy = "^1.4"
perflint = "^0.7"
pre-commit = "^3.3"
pre-commit-hooks = "^4.4"
pydocstyle = "^6.3"
pylint = "^2.17"
yamllint = "^1.32"

# Testing
hypothesis = "^6.79"
mimesis = "^8.0"
pytest = "^7.4"
pytest-asyncio = "^0.21"
pytest-cov = "^4.1"
pytest-describe = "^2.1"
pytest-expecter = "^3.0"
pytest-flakefinder = "^1.1"
pytest-order = "^1.1"
pytest-rerunfailures = "^11.1"

# Reports & Logging
coverage = { version = "^7.2", extras = ["toml"] }

[tool.poetry.group.utilities.dependencies]
bpython = "*"
devtools = "*"

[tool.poetry.group.profiling.dependencies]
functiontrace = "*"
yappi = "*"


[tool.pytest.ini_options]
minversion = "7.4"
addopts = '''
--order-scope=session
--disable-pytest-warnings
--strict-markers
--cov
--cov-config=pyproject.toml
--cov-report xml:coverage.xml
--no-cov-on-fail
--junitxml=junit.xml
-r
fEsxp
'''
asyncio_mode = "auto"
cache_dir = "./.cache"
testpaths = [
    "tests",
]
markers = [
    "descriptor",
    "description",
    "describe_nested",
]
python_classes = [
    "Test*",
    "Describe*",
]
python_functions = [
    "test_*",
    "when_*",
    "describe_*",
]

[tool.coverage.report]
fail_under = 50
show_missing = true

[tool.coverage.run]
branch = true
concurrency = []
include = [
    "perscache/*",
    "tests/*",
]
omit = ["scratch*.py"]
relative_files = true

[tool.black]
color = true
safe = true
line-length = 120
target-version = ["py311"]
skip-string-normalization = false

[tool.codespell]
builtin = "clear,rare,code"
ignore-words-list = """
cmo,deque,falsy,iif,nd,pullrequest,selectin,thar,truthy,mis,coo\
"""
interactive = 0
quiet-level = 3
skip = """
CHANGELOG.md,\
*.csv,*.db,*.json,*.lock,*.png,*.svg,*.xml,*.yaml,\
.cache,.git,.hypothesis,.idea,.run,.venv,.vscode,\
requirements.txt,requirements-dev.txt,\
__pycache__\
"""

[tool.isort]
profile = "black"
atomic = true
py_version = 311
verbose = false
remove_redundant_aliases = true
ensure_newline_before_comments = true
color_output = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 2
use_parentheses = true
line_length = 120
combine_as_imports = true
honor_noqa = true
skip_gitignore = true
default_section = "THIRDPARTY"
known_first_party = ["perscache", "tests"]
import_heading_future = "Future Imports"
import_heading_stdlib = "Standard Library Imports"
import_heading_thirdparty = "Third-Party Imports"
import_heading_firstparty = "Package-Level Imports"
import_heading_localfolder = "Imports From Package Sub-Modules"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
src_paths = ["perscache", "tests"]

[tool.pylint.main]
jobs = 0
persistent = true
py-version = "3.11"

[tool.pylint.format]
max-module-lines = 3000

[tool.pylint."messages control"]
disable = [
    # Message Categories
    "C",  # convention checks
    "R",  # refactoring checks
    "W",  # various warnings
    # Handled by pre-commit-hooks
    "trailing-whitespace",
    "missing-final-newline",
    # Handled by flake8
    "line-too-long",
    "unused-import",
    "unused-variable",
    "too-many-branches",
    "undefined-variable",
    # Handled by isort
    "wrong-import-order",
    # Specific Messages
    "no-member",
    "bare-except",
    "file-ignored",
    "invalid-name",
    "bad-super-call",
    "locally-disabled",
    "bad-inline-option",
    "deprecated-pragma",
    "no-name-in-module",
    "raw-checker-failed",
    "suppressed-message",
    "useless-suppression",
    "c-extension-no-member",
    "use-symbolic-message-instead",
]

[tool.pylint.reports]
score = false

[tool.mypy]
cache_dir = ".cache/mypy/"
check_untyped_defs = true
error_summary = true
exclude = "/tests/"
ignore_errors = true
ignore_missing_imports = true
install_types = false
follow_imports = "silent"
strict = false
pretty = true
python_version = 3.11
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_none_errors = false
strict_optional = false

[build-system]
requires = ["poetry>=1.5.0"]
build-backend = "poetry.core.masonry.api"
